Exercise: read three integers from user and print out the maximum of the three.
user_number_1 = int(input("enter the number ="))
 user_number_2 = int(input("enter the number ="))
user_number_3= int(input("enter the number ="))
if (user_number_1>user_number_2)  and (user_number_1>user_number_3):
    largest=user_number_1
elif (user_number_2>user_number_1) and (user_number_2>user_number_3):
    largest=user_number_2
else:
(user_number_3>user_number_1) and (user_number_3>user_number_2)
   largest= user_number_3
print ("the greatest number is =" +str(largest))


Exercise: read three integers from user and print out if these could be edges of  a right triangle
 x= int(input("x="))
y= int(input(" y="))
z = int(input("z="))
if(x*x == y*y + z*z):
  print ("xx= yy+ zz . Sides of right angle triangle")
elif(y*y==x*x+y*y):
   print("yy=xx+zz. Sides of right angle triangle")
elif(z*z==x*x+y*y):
    print("zz=xx+yy.  Sides of right angle triangle")
else:
    print("wrong!!")



Exercise: read one integer from user and print out the prime numbers between 2 and real number.

a= int(input(" Enter the number:"))
 
 
 
 class 
 class Student:
   def __init__(self, first_name, last_name, student_id):
       self.first_name = first_name
       self.last_name = last_name
       self.student_id = student_id

   def getbalance(selfself):
       return 200
   def getname(self):
       return self.first_name+" " + self.last_name
class CestarCollege:
    def __init__(self,address, manager):
        self.address = address
        self.manager = manager
student1= Student("Adam", "Jane","1234")
student2 = Student("Rickie", "Singh", "2345")
student3 = Student("Raman", "Grewal", "3456")
print(student1.first_name)
print(student2.student_id)

print (student1.getname())
print (student1.getbalance())

clas credit
class credit:
    def __init__(self, name, number, balance, limit, ):
        self.name = name
        self.number = number
        self.balance = balance
        self.limit = limit
        

    def getbalance(self):
       return 100
    def getname(self):
       return self.name
    def getnumber(self):
       return self.number
    def getlimit(self):
       return self.number
    def getlimit(self):
       return self.limit

name1 = credit("jone", "112233665544", "5000", "5000",)
name2 = credit("sam","114455889966", "6000","5000",)
name3 = credit("smith","885544779966","4000","600",)

print (name1.getname())
print (name1.getbalance())
print (name1.getnumber())
print (name2.getlimit())



class credit:
    def __init__(self, name, number, balance, limit, ):
        self.name = name
        self.number = number
        self.balance = balance
        self.limit = limit
    def swipe(self,amount):
        self.balance = self.balance + amount
    def paybalance(self,amount):
        self.balance = self.balance + amount
    def setlimit(self, nextlimit):
        self.limit= newlimit

    def getbalance(self):
        return self.balance

    def getname(self):
        return self.name

    def getnumber(self):
        return self.number

    def getlimit(self):
        return self.number

    def getlimit(self):
        return self.limit

name1 = credit("john", "546217", 545, 451)




classactivity
class car:
    def __init__(self,model, make, purchase_price, sold_price, purchase_date, sold_date):
        self.model = model
        self.make = make
        self.purchase_price = purchase_price
        self.sold_price = sold_price
        self.purchase_date = purchase_date
        self.sold_date = sold_date

    def getmodel(self):
        return self.model
    def setmodel(self, newModel):
        self.model = newModel
        
    def getmake(self):
        return self.make
    def setmake(self, newMake):
        self.make = newMake
        
    def getpurchase_price(self):
        return self.purchase_price
    def setpurchase_price(self, newpurchase_price):
        self.purchase_price = newpurchase_price
    
    def getsold_price(self):
        return self.sold_price
    def setsold_price(self, newsold_price):
        self.sold_price = newsold_price
        
    def getpurchase_date(self):
        return self.purchase_date
    def setpurchase_date(self, newpurchase_date):
        self.purchase_date = newpurchase_date
        
    def getsold_date(self):
        return self.sold_date
    def setsold_date(self, newsold_date):
        self.sold_date = newsold_date
